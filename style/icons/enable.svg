<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   xml:space="preserve"
   sodipodi:docname="enable_on.svg"
   inkscape:version="1.2.2 (732a01da63, 2022-12-09)"
   id="svg5"
   version="1.1"
   viewBox="0 0 36 36"
   height="36"
   width="36"
   inkscape:export-filename="enable_off.png"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"><script
     id="inkwebjs"
     type="text/javascript"><![CDATA[
/* inkweb.js - InkWebEffect:AutoUpdate */
/*
**  InkWeb - Inkscape's Javscript features for the open vector web
**
**  Copyright (C) 2009 Aurelio A. Heckert, aurium (a) gmail dot com
**
**  ********* Bugs and New Fetures *************************************
**   If you found any bug on this script or if you want to propose a
**   new feature, please report it in the inkscape bug tracker
**   https://inkscape.org/report .
**  ********************************************************************
**
**  This program is free software: you can redistribute it and/or modify
**  it under the terms of the GNU Lesser General Public License as published
**  by the Free Software Foundation, either version 3 of the License, or
**  (at your option) any later version.
**
**  This program is distributed in the hope that it will be useful,
**  but WITHOUT ANY WARRANTY; without even the implied warranty of
**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**  GNU Lesser General Public License for more details.
**
**  You should have received a copy of the GNU Lesser General Public License
**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

var InkWeb = {

  version: 0.04,

  NS: {
    svg:      "http://www.w3.org/2000/svg",
    sodipodi: "http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd",
    inkscape: "http://www.inkscape.org/namespaces/inkscape",
    cc:       "http://creativecommons.org/ns#",
    dc:       "http://purl.org/dc/elements/1.1/",
    rdf:      "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
    xlink:    "http://www.w3.org/1999/xlink",
    xml:      "http://www.w3.org/XML/1998/namespace"
  }

};

InkWeb.el = function (tag, attributes) {
  // A helper to create SVG elements
  var element = document.createElementNS( this.NS.svg, tag );
  for ( var att in attributes ) {
    switch ( att ) {
      case "parent":
        attributes.parent.appendChild( element );
        break;
      case "text":
        element.appendChild( document.createTextNode( attributes.text ) );
        break;
      default:
        element.setAttribute( att, attributes[att] );
    }
  }
  return element;
}

InkWeb.reGetStyleAttVal = function (att) {
  return new RegExp( "(^|.*;)[ ]*"+ att +":([^;]*)(;.*|$)" )
}

InkWeb.getStyle = function (el, att) {
  // This method is needed because el.style is only working
  // to HTML style in the Firefox 3.0
  if ( typeof(el) == "string" )
    el = document.getElementById(el);
  var style = el.getAttribute("style");
  var match = this.reGetStyleAttVal(att).exec(style);
  if ( match ) {
    return match[2];
  } else {
    return false;
  }
}

InkWeb.setStyle = function (el, att, val) {
  if ( typeof(el) == "string" )
    el = document.getElementById(el);
  var style = el.getAttribute("style");
  re = this.reGetStyleAttVal(att);
  if ( re.test(style) ) {
    style = style.replace( re, "$1"+ att +":"+ val +"$3" );
  } else {
    style += ";"+ att +":"+ val;
  }
  el.setAttribute( "style", style );
  return val
}

InkWeb.transmitAtt = function (conf) {
  conf.att = conf.att.split( /\s+/ );
  if ( typeof(conf.from) == "string" )
    conf.from = document.getElementById( conf.from );
  if ( ! conf.to.join )
    conf.to = [ conf.to ];
  for ( var toEl,elN=0; toEl=conf.to[elN]; elN++ ) {
    if ( typeof(toEl) == "string" )
      toEl = document.getElementById( toEl );
    for ( var i=0; i<conf.att.length; i++ ) {
      var val = this.getStyle( conf.from, conf.att[i] );
      if ( val ) {
        this.setStyle( toEl, conf.att[i], val );
      } else {
        val = conf.from.getAttribute(conf.att[i]);
        toEl.setAttribute( conf.att[i], val );
      }
    }
  }
}

InkWeb.goto = function (conf) {
  if ( typeof(conf.from) == "string" )
    conf.from = document.getElementById( conf.from );
  if ( ! conf.to )
    conf.to = conf.to ;
  if ( typeof(toEl) == "string" )
      toEl = document.getElementById( toEl );
  toEl = document.getElementById( conf.to );
  document.getElementsByTagName("svg")[0].viewBox.baseVal.x = toEl.getAttribute("x");
  document.getElementsByTagName("svg")[0].viewBox.baseVal.y = toEl.getAttribute("y");
}

InkWeb.setAtt = function (conf) {
  if ( ! conf.el.join )
    conf.to = [ conf.el ];
  conf.att = conf.att.split( /\s+/ );
  conf.val = conf.val.split( /\s+/ );
  for ( var el,elN=0; el=conf.el[elN]; elN++ ) {
    if ( typeof(el) == "string" )
      el = document.getElementById( el );
    for ( var att,i=0; att=conf.att[i]; i++ ) {
      if (
           att == "width"  ||
           att == "height" ||
           att == "x"  ||
           att == "y"  ||
           att == "cx" ||
           att == "cy" ||
           att == "r"  ||
           att == "rx" ||
           att == "ry" ||
           att == "transform"
         ) {
        el.setAttribute( att, conf.val[i] );
      } else {
        this.setStyle( el, att, conf.val[i] );
      }
    }
  }
}

InkWeb.moveElTo = function (startConf) {
  if ( typeof(startConf) == "string" ) {
    // startConf may be only a element Id, to timeout recursive calls.
    var el = document.getElementById( startConf );
  } else {
    if ( typeof(startConf.el) == "string" )
      startConf.el = document.getElementById( startConf.el );
    var el = startConf.el;
  }
  if ( ! el.inkWebMoving ) {
    el.inkWebMoving = {
      step: 0
    };
  }
  var conf = el.inkWebMoving;
  if ( conf.step == 0 ) {
    conf.x = startConf.x;
    conf.y = startConf.y;
    // dur : duration of the animation in seconds
    if ( startConf.dur ) { conf.dur = startConf.dur }
    else { conf.dur = 1 }
    // steps : animation steps in a second
    if ( startConf.stepsBySec ) { conf.stepsBySec = startConf.stepsBySec }
    else { conf.stepsBySec = 16 }
    conf.sleep = Math.round( 1000 / conf.stepsBySec );
    conf.steps = conf.dur * conf.stepsBySec;
    var startPos = el.getBBox();
    conf.xInc = ( conf.x - startPos.x ) / conf.steps;
    conf.yInc = ( conf.y - startPos.y ) / conf.steps;
    conf.transform = el.transform.baseVal.consolidate();
    if ( ! conf.transform ) {
      conf.transform = el.ownerSVGElement.createSVGTransform();
    }
    el.transform.baseVal.clear();
    el.transform.baseVal.appendItem(conf.transform);
  }
  if ( conf.step < conf.steps ) {
    conf.step++;
    conf.transform.matrix.e += conf.xInc;
    conf.transform.matrix.f += conf.yInc;
    try{ el.ownerSVGElement.forceRedraw() }
    catch(e){ this.log(e, "this "+el.ownerSVGElement+" has no forceRedraw().") }
    conf.timeout = setTimeout( 'InkWeb.moveElTo("'+el.id+'")', conf.sleep );
  } else {
    delete el.inkWebMoving;
  }
}

InkWeb.moveViewbox = function (conf) {
  if ( typeof(conf.from) == "string" )
    conf.from = document.getElementById( conf.from );
  if ( ! conf.to )
    conf.to = conf.from ;
  if ( typeof(conf.to) == "string" )
      conf.to = document.getElementById( conf.to );
  bbox = conf.to.getBBox();
  vbox = document.getElementsByTagName("svg")[0].viewBox;
  document.getElementsByTagName("svg")[0].viewBox.baseVal.x=bbox.x;
  document.getElementsByTagName("svg")[0].viewBox.baseVal.y=bbox.y;
  document.getElementsByTagName("svg")[0].viewBox.baseVal.width=bbox.width;
  document.getElementsByTagName("svg")[0].viewBox.baseVal.height=bbox.height;
  document.getElementsByTagName("svg")[0].viewBox.animVal.x=bbox.x;
  document.getElementsByTagName("svg")[0].viewBox.animVal.y=bbox.y;
  document.getElementsByTagName("svg")[0].viewBox.animVal.width=bbox.width;
  document.getElementsByTagName("svg")[0].viewBox.animVal.heigt=bbox.height;
  vbox = document.getElementsByTagName("svg")[0].viewBox;
}

InkWeb.log = function () { /* requires inkweb-debug.js, not included in Inkscape */ }
]]></script><sodipodi:namedview
     id="namedview7"
     pagecolor="#909090"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#000000"
     inkscape:document-units="px"
     showgrid="false"
     inkscape:zoom="4"
     inkscape:cx="18.875"
     inkscape:cy="40.75"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="1912"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg5"
     shape-rendering="auto"
     showguides="true"><inkscape:grid
       type="xygrid"
       id="grid8526"
       originx="960"
       originy="0" /></sodipodi:namedview><defs
     id="defs2"><linearGradient
       id="TextColor1_disabled"
       inkscape:swatch="solid"><stop
         style="stop-color:#698181;stop-opacity:1;"
         offset="0"
         id="stop62806" /></linearGradient><linearGradient
       id="Primary3_disabled"
       inkscape:swatch="solid"><stop
         style="stop-color:#8cb2be;stop-opacity:1;"
         offset="0"
         id="stop62786" /></linearGradient><linearGradient
       id="Primary3_selected"
       inkscape:swatch="solid"><stop
         style="stop-color:#c9e7ed;stop-opacity:1;"
         offset="0"
         id="stop62610" /></linearGradient><linearGradient
       id="Primary3_hover"
       inkscape:swatch="solid"><stop
         style="stop-color:#a4d5df;stop-opacity:1;"
         offset="0"
         id="stop55821" /></linearGradient><linearGradient
       id="TextColor1"
       inkscape:swatch="solid"
       gradientTransform="translate(73.769007,-7.6522783)"><stop
         style="stop-color:#1a2122;stop-opacity:1;"
         offset="0"
         id="stop50490" /></linearGradient><linearGradient
       id="Border2"
       inkscape:swatch="solid"
       gradientTransform="matrix(0.70780407,0,0,0.70780407,58.897629,14.792146)"><stop
         style="stop-color:#354558;stop-opacity:1;"
         offset="0"
         id="stop45570" /></linearGradient><linearGradient
       id="Border1"
       inkscape:swatch="solid"><stop
         style="stop-color:#6b98a5;stop-opacity:1;"
         offset="0"
         id="stop45556" /></linearGradient><linearGradient
       id="Accent1"
       inkscape:swatch="solid"><stop
         style="stop-color:#57a773;stop-opacity:1;"
         offset="0"
         id="stop44784" /></linearGradient><linearGradient
       id="Primary3"
       inkscape:swatch="solid"
       gradientTransform="translate(1.0768164e-5,-3.7300781e-5)"><stop
         style="stop-color:#7ec0d1;stop-opacity:1;"
         offset="0"
         id="stop42494" /></linearGradient><linearGradient
       id="Primary2"
       inkscape:swatch="solid"><stop
         style="stop-color:#476d86;stop-opacity:1;"
         offset="0"
         id="stop33411" /></linearGradient><linearGradient
       id="Primary1"
       inkscape:swatch="solid"><stop
         style="stop-color:#3d4e63;stop-opacity:1;"
         offset="0"
         id="stop25647" /></linearGradient><color-profile
       name="Adobe-RGB--1998-"
       xlink:href="../../../../../../WINDOWS/system32/spool/drivers/color/AdobeRGB1998.icc"
       id="color-profile14785" /><color-profile
       name="sRGB-IEC61966-2.1"
       xlink:href="../../../../../../WINDOWS/system32/spool/drivers/color/sRGB%20Color%20Space%20Profile.icm"
       id="color-profile14787" /><linearGradient
       inkscape:collect="always"
       xlink:href="#TextColor1_disabled"
       id="linearGradient12580"
       gradientTransform="matrix(0.70780407,0,0,0.70780407,58.897629,14.792146)"
       gradientUnits="userSpaceOnUse" /></defs><g
     id="g63021"
     inkscape:label="enable_on"
     style="display:none"
     inkscape:export-filename="icons\enable_on.svg"
     inkscape:export-xdpi="93.043922"
     inkscape:export-ydpi="93.043922"
     transform="translate(-114.01872,-257.35451)"><rect
       style="fill:none;stroke:url(#Border2);stroke-width:2.12341;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       id="rect55767"
       width="19.582315"
       height="19.582315"
       x="122.22756"
       y="265.56335" /><path
       style="fill:none;fill-opacity:1;stroke:url(#Border2);stroke-width:3;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
       d="m 127.17037,270.84932 c 0,0 3.25216,6.84099 5.84315,8.56066 4.35876,-9.94759 7.79809,-14.08578 15.5052,-17.55546"
       id="path62670"
       sodipodi:nodetypes="ccc" /></g><rect
     style="display:inline;fill:none;stroke:url(#linearGradient12580);stroke-width:2.12341;stroke-linecap:round;stroke-linejoin:round;stroke-dasharray:none;stroke-opacity:1"
     id="rect11125"
     width="19.582315"
     height="19.582315"
     x="122.22756"
     y="265.56335"
     transform="translate(-114.01872,-257.35451)"
     inkscape:label="enable_off" /><metadata
     id="metadata8893"><rdf:RDF><cc:Work
         rdf:about="" /></rdf:RDF></metadata></svg>
